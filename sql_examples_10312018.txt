/*	SQL Workshop October 31, 2018
	SQL Exercise commands*/

/*	some useful sources worth looking at:
	http://www.w3schools.com
	http://www.stackoverflow.com
	http://philip.greenspun.com/sql/
*/
	
-- old style single line comment
/* new style multi-line comment*/

/* SELECT all records and fields from table */
SELECT * FROM individual;

/* SELECT all records from specific fields */
SELECT individual_id, ind_location FROM individual;

/* SELECT unique occurrences from specified field */
SELECT DISTINCT ind_location FROM individual;

/* WHERE clause used to filter records */
SELECT * FROM physical_table WHERE physical_brilliance='bright';

/* WHERE clause w/ LIKE for pattern matching */
SELECT * FROM physical_table WHERE physical_brilliance LIKE 'brig%';

/* GROUP BY aggregation */
SELECT physical_brilliance, COUNT(*) FROM physical_table GROUP BY physical_brilliance;

/* UPDATE to clean data */
/* In MySQL, you must use the primary key when updating, or SET SQL_SAFE_UPDATES=0 */
UPDATE physical_table SET physical_brilliance='brilliant' WHERE physical_brilliance LIKE 'bril%' AND physical_auto_id <> 0;
UPDATE physical_table SET physical_brilliance='bright' WHERE physical_brilliance LIKE 'brig%' AND physical_auto_id <> 0;
SELECT physical_brilliance, COUNT(*) FROM physical_table GROUP BY physical_brilliance;

/* ORDER BY to sort data */
SELECT physical_brilliance, COUNT(physical_brilliance) FROM physical_table GROUP BY physical_brilliance ORDER BY physical_brilliance DESC;

/* ORDER BY with an alias, sort by number of occurrences in a field */
SELECT physical_brilliance, COUNT(physical_brilliance) AS a FROM physical_table GROUP BY physical_brilliance ORDER BY a DESC;

/* IN & BETWEEN examples */
SELECT * FROM physical_table WHERE physical_brilliance IN ('brilliant','bright');

/* INNER JOIN used to merge shared records across two tables */
SELECT * FROM individual INNER JOIN cohort ON individual.ind_cohort_id=cohort.cohort_id;

/* CREATE VIEW for repetitive tasks */
CREATE VIEW flatfile AS 
SELECT * FROM individual
INNER JOIN cohort ON individual.ind_cohort_id=cohort.cohort_id
INNER JOIN physical_table ON individual.individual_id=physical_table.physical_individual_id;

/* VIEWS can be queried just like a TABLE w/ SELECT */
SELECT * FROM flatfile;
